<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, shrink-to-fit=no">
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css" integrity="sha384-9aIt2nRpC12Uk9gS9baDl411NQApFmC26EwAOH8WgZl5MYYxFfc+NcPb1dKGj7Sk" crossorigin="anonymous">
    <link rel="stylesheet" href="/public/css/style.css">    
    <link rel="stylesheet" href="/public/css/toggleswitch.css">    
</head>
<body>
    <div class="container">
        <img src="/public/images/webcam50x65.png">
        <h2>Raspberry Pi Webcam Manual Focus</h2>

        <div>Autofocus on/off
            <label class="switch">
                <input type="checkbox" {{if .Autofocus}} checked {{end}} onchange="updateAutofocusSwitch(this.checked)">
                <span class="slider round"></span>
            </label>
        </div>
        
        <div>
            <img id="printer_camera" draggable="false" alt="Printer camera" src="http://{{.IPAddress}}:80/webcam/?action=stream" style="display:inline;">
        </div>

        <input id="focus_slider" type="range" min="0" max="250" value={{.Focus}} oninput="setFocus(this.value)"/>
        Current value: <span id="currentvalue">{{.Focus}}</span>

        <div>
        To set this focus value in your OctoPi as default, add the following line to octopi.config:
            <div class="terminal">
                v4l2-ctl --set-ctrl=focus_auto=<span id="autofocusvalue">{{.AutofocusValue}}</span><br/>
                v4l2-ctl --set-ctrl=focus_absolute=<span id="pivalue">{{.Focus}}</span>
            </div>
        </div>
    </div>

    <style>
        .terminal {
            /*font-size: 1.25em;*/
            font-family: monospace;
            white-space: normal;
            background-color: #444;
            color: #ddd;
            padding: 5px;
        }
        .switch {
            vertical-align: middle;
            margin-top: 5px;
        }
    </style>

    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js" integrity="sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo" crossorigin="anonymous"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/js/bootstrap.min.js" integrity="sha384-OgVRvuATP1z7JjHLkuOU7Xw704+h835Lr+6QL9UvYjZE3Ipu6Tp75j7Bh/kR0JKI" crossorigin="anonymous"></script>
    <script>
        var currentvalue = document.getElementById('currentvalue');
        var pivalue = document.getElementById('pivalue');
        var autofocusvalue = document.getElementById('autofocusvalue');
        var slider = document.getElementById('focus_slider');

        // Send autofocus setting to backend
        function updateAutofocusSwitch(state) {
            $.ajax({
                url: "/api",
                accept: "application/json",
                type: "POST",
                data: {autofocus: state},
                success: function(response) {
                    // Update slider with value from backend
                    value = getFocusValue();
                    autofocusvalue.innerHTML = state?"1":"0";
                    currentvalue.innerHTML = value;
                    slider.value = value;
                }
            });
        }

        // Get focus value from slider, update view and send it to backend
        function setFocus(value) {
            //currentvalue.innerHTML = value;
            sendFocusValue(value);
        }

        // Send focus value to backend
        function sendFocusValue(value) {
            $.ajax({
                url: "/api?focus="+value,
                //accept: "application/json",
                type: "POST",
                success: function(resp) {
                    getFocusValue()
                }
            });
        }

        // Get Focus value from backend
        function getFocusValue(value) {
            // Request value to backend
            $.ajax({
                url: "/api?focus",
                accept: "application/json",
                type: "GET",
                success: function(resp) {
                    console.log(resp);
                    currentvalue.innerHTML = resp.Value;
                    pivalue.innerHTML = resp.Value;
                    slider.value = resp.Value;
                },
            });
        }
    </script>
</body>
</html>